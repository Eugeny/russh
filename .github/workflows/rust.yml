name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  Build:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        override: true

    - name: Build (no features enabled)
      run: cargo build --verbose

    - name: Build (all features enabled)
      run: cargo build --verbose --all-features

  Build-Windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        override: true

    - name: Build (no features enabled)
      run: cargo build --verbose

    - name: Build (all features enabled)
      run: cargo build --verbose --all-features

  Build-WASM:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        override: true
        target: wasm32-wasip1

    - name: Install target
      run: |
        rustup target add wasm32-wasip1

    - name: Build (all features enabled)
      run: cargo build --verbose --target wasm32-wasip1 -p russh

  Formatting:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        override: true
        components: rustfmt

    - name: rustfmt
      run: cargo fmt --check

  Clippy:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        override: true
        components: clippy

    - name: Clippy (no features enabled)
      run: cargo clippy -- -D warnings

    - name: Clippy (all features enabled)
      run: cargo clippy --all-features -- -D warnings

  Test:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        override: true

    - name: Test (no features enabled)
      run: |
        eval `ssh-agent`
        cargo test --verbose
      env:
        RUST_BACKTRACE: 1

    - name: Test (all features enabled)
      run: |
        eval `ssh-agent`
        cargo test --verbose --all-features
      env:
        RUST_BACKTRACE: 1

  Minimal-versions:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v2

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        override: true
        toolchain: 1.85.0

    - uses: taiki-e/install-action@cargo-hack
    - uses: taiki-e/install-action@cargo-minimal-versions

    - name: Check with minimal dependency versions
      run: |
        cargo +1.85.0 minimal-versions check --all-features --no-dev-deps
